"""Create Request status and credit type tables

Revision ID: b68c52c72d7d
Revises: 17e3f08903dd
Create Date: 2025-05-29 14:29:05.356572

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "b68c52c72d7d"
down_revision: Union[str, None] = "17e3f08903dd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "credit_types",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "name", sqlmodel.sql.sqltypes.AutoString(length=None), nullable=False
        ),
        sa.Column(
            "code", sqlmodel.sql.sqltypes.AutoString(length=None), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("credit_types", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_credit_types_code"), ["code"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_credit_types_id"), ["id"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_credit_types_name"), ["name"], unique=False
        )

    op.create_table(
        "request_statuses",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "name", sqlmodel.sql.sqltypes.AutoString(length=None), nullable=False
        ),
        sa.Column(
            "code", sqlmodel.sql.sqltypes.AutoString(length=None), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("request_statuses", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_request_statuses_code"), ["code"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_request_statuses_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_request_statuses_name"), ["name"], unique=False
        )

    with op.batch_alter_table("requests", schema=None) as batch_op:
        batch_op.add_column(sa.Column("credit_type_id", sa.Uuid(), nullable=False))
        batch_op.add_column(sa.Column("status_id", sa.Uuid(), nullable=False))
        batch_op.create_index(
            batch_op.f("ix_requests_credit_type_id"), ["credit_type_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_requests_status_id"), ["status_id"], unique=False
        )
        batch_op.create_foreign_key(None, "credit_types", ["credit_type_id"], ["id"])
        batch_op.create_foreign_key(None, "request_statuses", ["status_id"], ["id"])
        batch_op.drop_column("credit_type")
        batch_op.drop_column("status")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("requests", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "status",
                postgresql.ENUM(
                    "PENDING",
                    "APPROVED",
                    "REJECTED",
                    "DISBURSED",
                    "PAID",
                    "CANCELED",
                    name="requeststatus",
                ),
                autoincrement=False,
                nullable=False,
            )
        )
        batch_op.add_column(
            sa.Column(
                "credit_type",
                postgresql.ENUM(
                    "WORKING_CAPITAL", "INVESTMENT", "CONSUMPTION", name="credittype"
                ),
                autoincrement=False,
                nullable=False,
            )
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_index(batch_op.f("ix_requests_status_id"))
        batch_op.drop_index(batch_op.f("ix_requests_credit_type_id"))
        batch_op.drop_column("status_id")
        batch_op.drop_column("credit_type_id")

    with op.batch_alter_table("request_statuses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_request_statuses_name"))
        batch_op.drop_index(batch_op.f("ix_request_statuses_id"))
        batch_op.drop_index(batch_op.f("ix_request_statuses_code"))

    op.drop_table("request_statuses")
    with op.batch_alter_table("credit_types", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_credit_types_name"))
        batch_op.drop_index(batch_op.f("ix_credit_types_id"))
        batch_op.drop_index(batch_op.f("ix_credit_types_code"))

    op.drop_table("credit_types")
    # ### end Alembic commands ###
